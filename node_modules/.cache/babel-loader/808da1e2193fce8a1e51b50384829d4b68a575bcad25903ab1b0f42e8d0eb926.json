{"ast":null,"code":"var _jsxFileName = \"/mnt/d/secretsanta/client-side/src/ListGroups.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListGroups({\n  isAdmin,\n  myGroup,\n  user,\n  deletePerson\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"7%\",\n        backgroundColor: '#f2f2f2',\n        width: '200px',\n        height: '100vh',\n        position: 'fixed',\n        left: '0',\n        top: '0',\n        overflowY: 'auto',\n        padding: '20px',\n        boxShadow: '2px 0 5px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Group Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), myGroup.map(people => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [people.Person, \" \", isAdmin && /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => deletePerson(people),\n            style: {\n              cursor: 'pointer',\n              color: 'red'\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this)\n      }, people.Person, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)), Object.keys(user).length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Their List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), user['friend'].map(lists => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: lists['item']\n          }, lists['item'], false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), user['myself'].map(lists => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: lists['item']\n          }, lists['item'], false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n}\n_c = ListGroups;\nexport default ListGroups;\nvar _c;\n$RefreshReg$(_c, \"ListGroups\");","map":{"version":3,"names":["ListGroups","isAdmin","myGroup","user","deletePerson","_jsxDEV","style","display","children","marginTop","backgroundColor","width","height","position","left","top","overflowY","padding","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","map","people","Person","onClick","cursor","color","Object","keys","length","_Fragment","lists","_c","$RefreshReg$"],"sources":["/mnt/d/secretsanta/client-side/src/ListGroups.js"],"sourcesContent":["function ListGroups({isAdmin, myGroup, user, deletePerson}){\n    return (\n        <div style={{display: \"flex\"}}>\n            <div style={{\n                marginTop: \"7%\",\n                backgroundColor: '#f2f2f2',\n                width: '200px',\n                height: '100vh',\n                position: 'fixed',\n                left: '0',\n                top: '0',\n                overflowY: 'auto',\n                padding: '20px',\n                boxShadow: '2px 0 5px rgba(0,0,0,0.2)' \n            }}>\n                <p>Group Members</p>\n                {myGroup.map((people) => (\n                    <div key={people.Person}>\n                        <p>{people.Person} {isAdmin && <span onClick={() => deletePerson(people)} style={{cursor: 'pointer', color: 'red'}}>X</span>}</p>\n                    </div>\n                ))}\n                {Object.keys(user).length > 1 && \n                    <>\n                        <div>\n                            <hr />\n                            <p>Their List</p>\n                            {user['friend'].map((lists) => (\n                                <p key={lists['item']}>{lists['item']}</p>\n                            ))}\n                        </div>\n                        <div>\n                            <hr />\n                            <p>My List</p>\n                            {user['myself'].map((lists) => (\n                                <p key={lists['item']}>{lists['item']}</p>\n                            ))}\n                        </div>\n                    </>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default ListGroups"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}